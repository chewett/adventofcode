package net.chewett.adventofcode.aoc{{year}}.problems;

import net.chewett.adventofcode.helpers.ProblemLoader;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import java.util.ArrayList;
import java.util.List;

public class Day{{day}}Test {

    /**
     * Function to get the example inputs
     * @return The example input
     */
    public List<String> getExampleInput() {
        List<String> input = new ArrayList<>();

        //Add inputs

        return input;
    }

    /**
     * Test Day {{day}} part one with the example input (with the known result)
     */
    @Test
    public void testExampleInputPartOne() {
        List<String> input = this.getExampleInput();
        Day{{day}} d = new Day{{day}}();
        Assertions.assertEquals(0, d.solvePartOne(input));
    }


    /**
     * Test Day {{day}} part one with the real input (and the correct answer)
     */
    @Test
    public void testRealPartOne() {
        List<String> input = ProblemLoader.loadProblemIntoStringArray({{year}}, {{day}});
        Day{{day}} d = new Day{{day}}();
        Assertions.assertEquals(0, d.solvePartOne(input));
    }

    /**
     * Test Day {{day}} part two with the example input (with the known result)
     */
    @Test
    public void testExampleInputPartTwo() {
        List<String> input = this.getExampleInput();
        Day{{day}} d = new Day{{day}}();
        Assertions.assertEquals(0, d.solvePartTwo(input));
    }

    /**
     * Test Day {{day}} part two with the real input (with the correct answer)
     */
    @Test
    public void testRealPartTwo() {
        List<String> input = ProblemLoader.loadProblemIntoStringArray({{year}}, {{day}});
        Day{{day}} d = new Day{{day}}();
        Assertions.assertEquals(0, d.solvePartTwo(input));
    }

}
